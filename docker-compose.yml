version: "3.8"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    depends_on:
      - web-server
      - authentication
      - player-management
      - chat
      - webrtc-signaling
    networks:
      - backend

  web-server:
    build:
      context: ./services/web-server
      dockerfile: Dockerfile
    ports:
      - "3000:8000"
    volumes:
      - ./services/web-server/public:/usr/src/app/public
    networks:
      - backend

  # Authentication Service
  authentication:
    build:
      context: ./services/authentication
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      NODE_ENV: production
    networks:
      - backend

  webrtc-signaling:
    build:
      context: ./services/webrtc-signaling
      dockerfile: Dockerfile
    ports:
      - "8080:8000"
    networks:
      - backend

  # Chat Service
  chat:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      NODE_ENV: production
    networks:
      - backend

  # Game Logic Service
  game-logic:
    build:
      context: ./services/game-logic
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      NODE_ENV: production
    networks:
      - backend

  # Player Management Service
  player-management:
    build:
      context: ./services/player-management
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      NODE_ENV: production
    networks:
      - backend
    volumes:
      - player_data:/usr/src/app/data

  database:
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mmorpg
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  db_data:
  player_data:
